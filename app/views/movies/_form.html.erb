<style>
  .form-wrapper {
    max-width: 900px;
    margin: 0 auto;
  }
  
  .form-header {
    text-align: center;
    margin-bottom: 3rem;
    animation: fadeInDown 0.6s ease-out;
  }
  
  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .form-header h1 {
    font-size: 3rem;
    font-weight: 900;
    color: white;
    margin-bottom: 0.5rem;
  }
  
  .form-header p {
    color: #94a3b8;
    font-size: 1.1rem;
  }
  
  .form-card {
    background: rgba(30, 41, 59, 0.6);
    border: 1px solid rgba(239, 68, 68, 0.2);
    border-radius: 16px;
    padding: 3rem;
    backdrop-filter: blur(10px);
    animation: fadeInUp 0.6s ease-out 0.2s both;
  }
  
  .ai-search-box {
    background: linear-gradient(135deg, rgba(139, 92, 246, 0.1) 0%, rgba(239, 68, 68, 0.1) 100%);
    border: 2px solid #8b5cf6;
    border-radius: 16px;
    padding: 2rem;
    margin-bottom: 3rem;
    position: relative;
    overflow: hidden;
  }
  
  .ai-search-box::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(45deg, transparent, rgba(139, 92, 246, 0.1), transparent);
    animation: shimmer 3s infinite;
  }
  
  @keyframes shimmer {
    0% {
      transform: translateX(-100%) translateY(-100%);
    }
    100% {
      transform: translateX(100%) translateY(100%);
    }
  }
  
  .ai-search-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
    position: relative;
    z-index: 1;
  }
  
  .ai-icon {
    font-size: 2rem;
    animation: pulse 2s infinite;
  }
  
  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.1);
    }
  }
  
  .ai-search-header h3 {
    font-size: 1.5rem;
    font-weight: 700;
    color: #c4b5fd;
  }
  
  .ai-search-description {
    color: #cbd5e1;
    margin-bottom: 1.5rem;
    position: relative;
    z-index: 1;
  }
  
  .ai-input-group {
    display: flex;
    gap: 1rem;
    position: relative;
    z-index: 1;
  }
  
  .ai-input {
    flex: 1;
    background: rgba(15, 23, 42, 0.9);
    border: 2px solid rgba(139, 92, 246, 0.5);
    border-radius: 12px;
    padding: 1.2rem 1.5rem;
    color: white;
    font-size: 1.1rem;
    transition: all 0.3s;
  }
  
  .ai-input:focus {
    outline: none;
    border-color: #8b5cf6;
    box-shadow: 0 0 0 4px rgba(139, 92, 246, 0.2);
  }
  
  .ai-button {
    background: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
    color: white;
    border: none;
    padding: 1.2rem 2.5rem;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    white-space: nowrap;
  }
  
  .ai-button:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 30px rgba(139, 92, 246, 0.4);
  }
  
  .ai-loading, .ai-success, .ai-error {
    margin-top: 1.5rem;
    padding: 1.2rem;
    border-radius: 10px;
    display: none;
    align-items: center;
    gap: 1rem;
    animation: slideIn 0.3s ease-out;
  }
  
  @keyframes slideIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .ai-loading {
    background: rgba(59, 130, 246, 0.2);
    border: 1px solid #3b82f6;
    color: #93c5fd;
  }
  
  .ai-success {
    background: rgba(34, 197, 94, 0.2);
    border: 1px solid #22c55e;
    color: #86efac;
  }
  
  .ai-error {
    background: rgba(251, 191, 36, 0.2);
    border: 1px solid #fbbf24;
    color: #fcd34d;
  }
  
  .spinner {
    width: 20px;
    height: 20px;
    border: 3px solid rgba(147, 197, 253, 0.3);
    border-top-color: #93c5fd;
    border-radius: 50%;
    animation: spin 0.8s linear infinite;
  }
  
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
  
  .form-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 2rem;
  }
  
  .form-group {
    margin-bottom: 2rem;
  }
  
  .form-group.full-width {
    grid-column: 1 / -1;
  }
  
  .form-label {
    display: block;
    color: #e2e8f0;
    font-weight: 600;
    font-size: 1rem;
    margin-bottom: 0.8rem;
  }
  
  .required {
    color: #ef4444;
  }
  
  .form-input, .form-textarea, .form-select {
    width: 100%;
    background: rgba(15, 23, 42, 0.8);
    border: 2px solid rgba(148, 163, 184, 0.3);
    border-radius: 10px;
    color: white;
    padding: 1rem 1.2rem;
    font-size: 1rem;
    transition: all 0.3s;
  }
  
  .form-input:focus, .form-textarea:focus, .form-select:focus {
    outline: none;
    border-color: #ef4444;
    box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
  }
  
  .form-textarea {
    min-height: 150px;
    resize: vertical;
  }
  
  .form-hint {
    color: #64748b;
    font-size: 0.9rem;
    margin-top: 0.5rem;
  }
  
  .file-upload-area {
    border: 3px dashed rgba(148, 163, 184, 0.3);
    border-radius: 12px;
    padding: 2.5rem;
    text-align: center;
    transition: all 0.3s;
    cursor: pointer;
    background: rgba(15, 23, 42, 0.4);
  }
  
  .file-upload-area:hover {
    border-color: #ef4444;
    background: rgba(239, 68, 68, 0.05);
  }
  
  .file-upload-icon {
    font-size: 3rem;
    margin-bottom: 1rem;
  }
  
  .file-upload-text {
    color: #cbd5e1;
    font-size: 1rem;
  }
  
  .file-upload-input {
    display: none;
  }
  
  .poster-preview {
    margin-top: 1.5rem;
    text-align: center;
  }
  
  .poster-preview img {
    max-width: 300px;
    border-radius: 12px;
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.5);
  }
  
  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
    gap: 1rem;
  }
  
  .category-checkbox {
    display: none;
  }
  
  .category-label {
    display: block;
    background: rgba(15, 23, 42, 0.6);
    border: 2px solid rgba(148, 163, 184, 0.3);
    border-radius: 10px;
    padding: 1rem;
    text-align: center;
    color: #cbd5e1;
    cursor: pointer;
    transition: all 0.3s;
    font-weight: 600;
  }
  
  .category-checkbox:checked + .category-label {
    background: rgba(239, 68, 68, 0.3);
    border-color: #ef4444;
    color: #fca5a5;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(239, 68, 68, 0.3);
  }
  
  .category-label:hover {
    border-color: #ef4444;
    transform: translateY(-2px);
  }
  
  .form-actions {
    display: flex;
    gap: 1.5rem;
    justify-content: center;
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid rgba(148, 163, 184, 0.2);
  }
  
  .btn-submit {
    background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
    color: white;
    border: none;
    padding: 1.3rem 4rem;
    border-radius: 12px;
    font-size: 1.2rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s;
    box-shadow: 0 10px 30px rgba(239, 68, 68, 0.3);
  }
  
  .btn-submit:hover {
    transform: translateY(-3px);
    box-shadow: 0 15px 40px rgba(239, 68, 68, 0.5);
  }
  
  .btn-cancel {
    background: rgba(100, 116, 139, 0.2);
    color: #cbd5e1;
    border: 2px solid #64748b;
    padding: 1.3rem 3rem;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 700;
    text-decoration: none;
    transition: all 0.3s;
    display: inline-block;
  }
  
  .btn-cancel:hover {
    background: rgba(100, 116, 139, 0.4);
    transform: translateY(-2px);
  }
  
  .error-messages {
    background: rgba(239, 68, 68, 0.2);
    border: 2px solid #ef4444;
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 2rem;
    animation: shake 0.5s;
  }
  
  @keyframes shake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    75% { transform: translateX(10px); }
  }
  
  .error-messages h3 {
    color: #fca5a5;
    font-weight: 700;
    margin-bottom: 1rem;
  }
  
  .error-messages ul {
    list-style: none;
    padding: 0;
  }
  
  .error-messages li {
    color: #fecaca;
    padding: 0.5rem 0;
  }
  
  @media (max-width: 768px) {
    .form-grid {
      grid-template-columns: 1fr;
    }
    
    .ai-input-group {
      flex-direction: column;
    }
    
    .ai-button {
      width: 100%;
    }
    
    .form-actions {
      flex-direction: column;
    }
    
    .btn-submit, .btn-cancel {
      width: 100%;
      text-align: center;
    }
  }
</style>

<div class="form-wrapper">
  <div class="form-header">
    <h1>üé¨ <%= movie.new_record? ? "Adicionar Filme" : "Editar Filme" %></h1>
    <p>Preencha as informa√ß√µes do filme ou use a busca inteligente com IA</p>
  </div>
  
  <div class="form-card">
    <% if movie.errors.any? %>
      <div class="error-messages">
        <h3>‚ö† <%= pluralize(movie.errors.count, "erro") %> encontrado:</h3>
        <ul>
          <% movie.errors.full_messages.each do |msg| %>
            <li>‚Ä¢ <%= msg %></li>
          <% end %>
        </ul>
      </div>
    <% end %>
    
    <!-- AI Search Box -->
    <div class="ai-search-box">
      <div class="ai-search-header">
        <span class="ai-icon">ü§ñ</span>
        <h3>Busca Inteligente com IA</h3>
      </div>
      <p class="ai-search-description">
        Digite o nome do filme e deixe a IA preencher automaticamente todas as informa√ß√µes!
      </p>
      
      <div class="ai-input-group">
        <input 
          type="text" 
          id="ai_search_title" 
          class="ai-input"
          placeholder="Ex: Inception, Matrix, Interstellar..."
        />
        <button type="button" id="ai_search_button" class="ai-button">
          üîç Buscar com IA
        </button>
      </div>
      
      <div id="ai_loading" class="ai-loading">
        <div class="spinner"></div>
        <span>Buscando informa√ß√µes...</span>
      </div>
      
      <div id="ai_result" class="ai-success">
        <span>‚úÖ</span>
        <span>Informa√ß√µes encontradas! Campos preenchidos automaticamente.</span>
      </div>
      
      <div id="ai_error" class="ai-error">
        <span>‚ö†</span>
        <span>N√£o foi poss√≠vel buscar automaticamente. Preencha manualmente.</span>
      </div>
    </div>
    
    <%= form_with(model: movie, local: true, html: { multipart: true }) do |f| %>
      <div class="form-grid">
        <!-- Title -->
        <div class="form-group full-width">
          <%= f.label :title, class: "form-label" do %>
            T√≠tulo <span class="required">*</span>
          <% end %>
          <%= f.text_field :title, 
              id: "movie_title",
              class: "form-input", 
              placeholder: "Ex: Matrix", 
              required: true 
          %>
        </div>
        
        <!-- Synopsis -->
        <div class="form-group full-width">
          <%= f.label :synopsis, "Sinopse", class: "form-label" %>
          <%= f.text_area :synopsis, 
              id: "movie_synopsis",
              class: "form-textarea", 
              placeholder: "Descreva a hist√≥ria do filme..."
          %>
          <span class="form-hint">Uma breve descri√ß√£o do enredo</span>
        </div>
        
        <!-- Year -->
        <div class="form-group">
          <%= f.label :year, "Ano de Lan√ßamento", class: "form-label" %>
          <%= f.number_field :year, 
              id: "movie_year",
              class: "form-input", 
              placeholder: "2024",
              min: 1888,
              max: Time.now.year + 5
          %>
        </div>
        
        <!-- Duration -->
        <div class="form-group">
          <%= f.label :duration, "Dura√ß√£o (minutos)", class: "form-label" %>
          <%= f.number_field :duration, 
              id: "movie_duration",
              class: "form-input", 
              placeholder: "120"
          %>
        </div>
        
        <!-- Director -->
        <div class="form-group full-width">
          <%= f.label :director, "Diretor", class: "form-label" %>
          <%= f.text_field :director, 
              id: "movie_director",
              class: "form-input", 
              placeholder: "Ex: Christopher Nolan"
          %>
        </div>
        
        <!-- Categories -->
        <div class="form-group full-width">
          <%= f.label :category_ids, "Categorias", class: "form-label" %>
          <div class="categories-grid">
            <% @categories.each do |category| %>
              <div>
                <%= f.check_box :category_ids, 
                    { multiple: true, class: "category-checkbox", id: "category_#{category.id}" }, 
                    category.id, 
                    nil 
                %>
                <%= f.label "category_ids_#{category.id}", category.name, class: "category-label", for: "category_#{category.id}" %>
              </div>
            <% end %>
          </div>
        </div>
        
        <!-- Poster Upload -->
        <div class="form-group full-width">
          <%= f.label :poster, "Poster do Filme", class: "form-label" %>
          <label for="movie_poster" class="file-upload-area">
            <div class="file-upload-icon">üì∏</div>
            <div class="file-upload-text">
              <strong>Clique para fazer upload</strong> ou arraste o arquivo aqui
              <br>
              <small>JPG, PNG ou GIF (m√°x 10MB)</small>
            </div>
          </label>
          <%= f.file_field :poster, 
              accept: "image/*", 
              class: "file-upload-input",
              id: "movie_poster"
          %>
          
          <% if movie.poster.attached? %>
            <div class="poster-preview">
              <%= image_tag movie.poster, alt: "Poster atual" %>
              <p style="color: #22c55e; margin-top: 1rem; font-weight: 700;">‚úì Poster atual</p>
            </div>
          <% end %>
        </div>
      </div>
      
      <!-- Form Actions -->
      <div class="form-actions">
        <%= link_to "Cancelar", movies_path, class: "btn-cancel" %>
        <%= f.submit "üíæ #{movie.new_record? ? 'Adicionar Filme' : 'Salvar Altera√ß√µes'}", class: "btn-submit" %>
      </div>
    <% end %>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const searchButton = document.getElementById('ai_search_button');
  const searchInput = document.getElementById('ai_search_title');
  const loadingDiv = document.getElementById('ai_loading');
  const resultDiv = document.getElementById('ai_result');
  const errorDiv = document.getElementById('ai_error');
  
  if (searchButton) {
    searchButton.addEventListener('click', async function() {
      const title = searchInput.value.trim();
      
      if (!title) {
        alert('Por favor, digite o nome de um filme!');
        return;
      }
      
      // Show loading
      loadingDiv.style.display = 'flex';
      resultDiv.style.display = 'none';
      errorDiv.style.display = 'none';
      searchButton.disabled = true;
      searchButton.style.opacity = '0.5';
      
      try {
        const response = await fetch('/ai_search', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'X-CSRF-Token': document.querySelector('[name="csrf-token"]').content
          },
          body: JSON.stringify({ title: title })
        });
        
        const data = await response.json();
        
        if (data.error) {
          throw new Error(data.error);
        }
        
        // Fill form fields
        if (data.title) document.getElementById('movie_title').value = data.title;
        if (data.synopsis) document.getElementById('movie_synopsis').value = data.synopsis;
        if (data.year) document.getElementById('movie_year').value = data.year;
        if (data.duration) document.getElementById('movie_duration').value = data.duration;
        if (data.director) document.getElementById('movie_director').value = data.director;
        
        // Show success
        loadingDiv.style.display = 'none';
        resultDiv.style.display = 'flex';
        
        // Clear search input
        searchInput.value = '';
        
        // Scroll to form
        document.getElementById('movie_title').scrollIntoView({ behavior: 'smooth', block: 'center' });
        
      } catch (error) {
        console.error('Erro na busca:', error);
        loadingDiv.style.display = 'none';
        errorDiv.style.display = 'flex';
      } finally {
        searchButton.disabled = false;
        searchButton.style.opacity = '1';
      }
    });
    
    // Search on Enter
    searchInput.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        e.preventDefault();
        searchButton.click();
      }
    });
  }
  
  // File upload preview
  const fileInput = document.getElementById('movie_poster');
  if (fileInput) {
    fileInput.addEventListener('change', function(e) {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          const preview = document.querySelector('.poster-preview');
          if (preview) {
            const img = preview.querySelector('img');
            if (img) {
              img.src = e.target.result;
            }
          }
        };
        reader.readAsDataURL(file);
      }
    });
  }
});
</script>
