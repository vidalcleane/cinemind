class MovieImportsController < ApplicationController
  before_action :authenticate_user!

  def new
    @movie_import = MovieImport.new
  end

  def create
    @movie_import = current_user.movie_imports.build
    @movie_import.file_name = movie_import_params[:file_name]
    @movie_import.csv_file.attach(movie_import_params[:csv_file])
    @movie_import.status = 'pending'
    
    if @movie_import.save
      ImportMoviesJob.perform_later(@movie_import.id)
      redirect_to @movie_import, notice: 'ðŸ“¤ ImportaÃ§Ã£o iniciada! VocÃª receberÃ¡ um email quando concluir.'
    else
      render :new, status: :unprocessable_entity
    end
  end

  def show
    @movie_import = current_user.movie_imports.find(params[:id])
  end

  def status
    @movie_import = current_user.movie_imports.find(params[:id])
    render json: {
      status: @movie_import.status,
      total_rows: @movie_import.total_rows,
      processed_rows: @movie_import.processed_rows,
      errors: @movie_import.errors.full_messages.join(', ')
    }
  end

  private

  def movie_import_params
    params.require(:movie_import).permit(:file_name, :csv_file)
  end
end
